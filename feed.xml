<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Tinple</title>
    <link href="http://tinple.me/feed" rel="self" />
    <link href="http://tinple.me/" />
    <updated>2013-11-03T18:07:15+08:00</updated>
    <id>http://tinple.me/</id>
    <entry>
        <title type="html"><![CDATA[纪念杭州国际马拉松]]></title>
        <author><name>Tinple</name></author>
        <link href="http://tinple.me/memory-marathon"/>
        <published>2013-11-03T00:00:00+08:00</published>
        <updated>2013-11-03T18:07:15+08:00</updated>
        <id>http://tinple.me/memory-marathon</id>
        <category scheme="http://tinple.me/tag/development/" term="development" label="development" />
        <category scheme="http://tinple.me/tag/marathon/" term="marathon" label="marathon" />
        <content type="html" xml:base="http://tinple.me" xml:lang="en">
            <![CDATA[ <p>第一次参加马拉松，12.8公里，在杭州。</p>
<p>即便你一直在跑，总是有人在你前面，有人在你后面。只不过当你停下来的时候，在你前面的人就多了，哪怕你只是放缓脚步。马拉松如此，很多时候，生活也是如此。</p>
<p>谨以此纪念，明年再来。</p>
<p>P.S. 今天偶遇某人多次:D</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[ISA Training Part Two]]></title>
        <author><name>Tinple</name></author>
        <link href="http://tinple.me/tech/isa-training-2"/>
        <published>2013-11-02T00:00:00+08:00</published>
        <updated>2013-11-02T18:06:09+08:00</updated>
        <id>http://tinple.me/tech/isa-training-2</id>
        <category scheme="http://tinple.me/tag/development/" term="development" label="development" />
        <category scheme="http://tinple.me/tag/isa/" term="isa" label="isa" />
        <category scheme="http://tinple.me/tag/web/" term="web" label="web" />
        <content type="html" xml:base="http://tinple.me" xml:lang="en">
            <![CDATA[ <p>Everytime when you open your own browser, you just step into a part of <strong>Web</strong> field.And just have a glance of those web pages on the browser.</p>

<ul>
<li><a href="http://weibo.com">weibo</a></li>
<li><a href="http://www.zhihu.com">zhihu</a></li>
<li><a href="http://taobao.com">taobao</a></li>
</ul>
<p>Look at their design, layout and user experience, you may find some different stuffs, and recall what if we visit those websites on a Remote-device?Besides, you see, the nature of them varies, SNS, Social Q &amp; A and C2C.</p>
<p>And nowadays, much more like desktop system web applications appear, like <a href="http://web2.qq.com">webqq</a>, and one more amazing thing, <a href="http://copy.sh/v24/">x86-Simulator</a>.You just can not image it!</p>
<p>However, <strong>no pain, no gain</strong>.Maybe it is really difficult for us to do the stuffs above.But we can hold it step by step, just see those single nice pages, it only requires your imagination.Or maybe you prefer to develop a web game, see the simple tetris game I coded long ago.Yep, you can also finish your own web application game! Even more helpful things like hduhelp.</p>
<p><strong>Only time and determination require!</strong></p>
<p>I will show you some skills you may love to learn, you can learn these skills following the order.</p>

<ul>
<li>HTML &amp; CSS</li>
<li>Javascript</li>
<li>NodeJs</li>
<li>And maybe more other skills..(we will talk about it later)</li>
</ul>
<p>Wait, there are some useful tools I want to show you as well.</p>

<ul>
<li><a href="http://127.0.0.1:8080/#/title">Web Slide controlled remotely</a></li>
<li><a href="http://www.zybuluo.com/mdeditor">online markdown editor</a></li>
<li><a href="http://lab.lepture.com/liquidluck/">liquidluck</a></li>
</ul>
<p>Also some really nice stuffs we usually use, you may touch later if you want to insist on.</p>

<ul>
<li><a href="https://www.github.com">github</a></li>
<li><a href="http://stackoverflow.com">stackoverflow</a></li>
<li><a href="https://www.yinxiang.com/">evernote</a></li>
<li>Git</li>
</ul>
<p>And if you have intersts about those things I refer, just find me directly and I will 
tell you more after.Do not be shy!</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Keyword &quot;this&quot; in Javascript]]></title>
        <author><name>Tinple</name></author>
        <link href="http://tinple.me/tech/keyword-this-in-javascript"/>
        <published>2013-11-01T00:00:00+08:00</published>
        <updated>2013-11-01T23:48:04+08:00</updated>
        <id>http://tinple.me/tech/keyword-this-in-javascript</id>
        <category scheme="http://tinple.me/tag/this/" term="this" label="this" />
        <category scheme="http://tinple.me/tag/javascript/" term="javascript" label="javascript" />
        <category scheme="http://tinple.me/tag/oop/" term="oop" label="oop" />
        <content type="html" xml:base="http://tinple.me" xml:lang="en">
            <![CDATA[ <p>I always get tripped up by the <code>this</code> keyword in <code>Javascript</code>.And everytime when I &ldquo;understand&rdquo; it, I still feel confused about
it next time.Hence, this post is here.</p>
<p>In fact, <code>this</code> follows a relatively small set of simple rules.</p>

<h2 id="toc_0">Gloabal context</h2>
<p>In the global execution context, <code>this</code> refers to the <strong>global object</strong>, whether in strict mode or not.</p>
<div class="highlight"><pre><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nb">document</span> <span class="o">===</span> <span class="nb">document</span><span class="p">);</span> <span class="c1">// true</span>

<span class="c1">// In browser, the global object is the ```window``` object</span>
<span class="c1">// In Node.js, it&#39;s just called the &quot;global object&quot;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span> <span class="o">===</span> <span class="nb">window</span><span class="p">);</span> <span class="c1">// true</span>

<span class="k">this</span><span class="p">.</span><span class="nx">a</span> <span class="o">=</span> <span class="mi">37</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">a</span><span class="p">);</span> <span class="c1">// 37</span>
</pre></div>

<h2 id="toc_1">Function context</h2>
<p>A function&#39;s <code>this</code> keyword may behaves a little differently in <code>Javascript</code> compared to other languages.
And there are three cases where the value of <code>this</code> changes.</p>

<h3 id="toc_2">Method invocations</h3>
<p>When a function is called as a method of an object, its <code>this</code> refers to the object the method is called on.</p>
<div class="highlight"><pre><span class="kd">var</span> <span class="nx">creditCard</span> <span class="o">=</span> <span class="p">{</span>
    <span class="nx">money</span><span class="o">:</span> <span class="mi">0</span><span class="p">,</span>
    <span class="nx">increment</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">money</span> <span class="o">+=</span> <span class="mi">8888</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="c1">// dot notation</span>
<span class="nx">creditCard</span><span class="p">.</span><span class="nx">increment</span><span class="p">();</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">creditCard</span><span class="p">.</span><span class="nx">money</span><span class="p">);</span>  <span class="c1">// 8888</span>

<span class="c1">// bracket notation</span>
<span class="nx">creditCard</span><span class="p">[</span><span class="s1">&#39;increment&#39;</span><span class="p">]();</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">creditCard</span><span class="p">.</span><span class="nx">money</span><span class="p">);</span> <span class="c1">// 17776</span>

<span class="cm">/*****call the same function directly*****/</span>
<span class="kd">var</span> <span class="nx">moreMoney</span> <span class="o">=</span> <span class="nx">creditCard</span><span class="p">.</span><span class="nx">increment</span><span class="p">;</span>
<span class="nx">moreMoney</span><span class="p">();</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">creditCard</span><span class="p">.</span><span class="nx">money</span><span class="p">);</span> <span class="c1">// 17776</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">money</span><span class="p">);</span> <span class="c1">// NAN</span>
</pre></div>
<p>Note that when we call the same function directly, <code>this</code> refers to the global object instead of <code>creditCard</code> object.</p>
<div class="highlight"><pre><span class="c1">// window.money += 8888, but window.money is undefined </span>
<span class="k">this</span><span class="p">.</span><span class="nx">money</span> <span class="o">+=</span> <span class="mi">8888</span><span class="p">;</span>
</pre></div>
<p>And what&#39;s more, this rule also works on the prototype chain.</p>
<div class="highlight"><pre><span class="kd">var</span> <span class="nx">moneyUp</span> <span class="o">=</span> <span class="p">{</span>
    <span class="nx">increment</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">money</span> <span class="o">+=</span> <span class="mi">8888</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="kd">var</span> <span class="nx">creditCard</span> <span class="o">=</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">moneyUp</span><span class="p">);</span>
<span class="nx">creditCard</span><span class="p">.</span><span class="nx">money</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">creditCard</span><span class="p">.</span><span class="nx">increment</span><span class="p">());</span>
</pre></div>

<h3 id="toc_3">The new operator</h3>
<p>And when a function is used as a <strong>constructor</strong>(with the <code>new</code> keyword), its <code>this</code> is set to the newly created object.</p>
<div class="highlight"><pre><span class="kd">function</span> <span class="nx">CreditCard</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">money</span> <span class="o">=</span> <span class="mi">8888</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">var</span> <span class="nx">savedMoney</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">CreditCard</span><span class="p">();</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">savedMoney</span><span class="p">.</span><span class="nx">money</span><span class="p">);</span> <span class="c1">// 8888</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">money</span><span class="p">);</span>  <span class="c1">// ReferenceError</span>

<span class="c1">// And without new, </span>
<span class="c1">// this refers to the global object</span>
<span class="kd">var</span> <span class="nx">savedMoney_</span> <span class="o">=</span> <span class="nx">CreditCard</span><span class="p">();</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">savedMoney_</span><span class="p">.</span><span class="nx">money</span><span class="p">);</span> <span class="c1">// undefined</span>
</pre></div>

<h3 id="toc_4">Call and apply</h3>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Monthly review for Oct.2013]]></title>
        <author><name>Tinple</name></author>
        <link href="http://tinple.me/life/monthly-review-for-oct-2013"/>
        <published>2013-11-01T00:00:00+08:00</published>
        <updated>2013-10-29T21:41:53+08:00</updated>
        <id>http://tinple.me/life/monthly-review-for-oct-2013</id>
        <category scheme="http://tinple.me/tag/month-review/" term="month-review" label="month-review" />
        <category scheme="http://tinple.me/tag/life/" term="life" label="life" />
        <content type="html" xml:base="http://tinple.me" xml:lang="en">
            <![CDATA[ <h2 id="toc_0">Tech</h2>
<p>1.国庆回来后月初忙着报名平台的上线，忙乱中各种页面UI优化，功能测试，注入测试，最后还是赶在10号上线了。</p>
<p>2.也是管中窥豹了一番web安全，学习了数据库权限(Privilege)的精确设置，数据的各种过滤，服务端文件的权限设置。</p>
<p>3.第一次读完了英文影印版的Head First系列PHP &amp; Mysql，非常有趣，idea发散式学习，觉得比较适合入门看如果英文阅读能力强的话，但还是权当巩固基础知识了。</p>
<p>4.月末在读Javascript的乌龟书，200多页精悍的书讲述着编程风格，编程实践等等，虽然现在缺少机会去参与团队协作开发，但现在看一点也不显早，相反的确帮我改进了许多coding习惯还有思维。</p>
<p>5.间断性地读了一些框架的源码，比如codeigniter（CI），jQuery。感触最大的一点是它们整体的设计模式，还有编程，的确能学到许多，从中也是能看到它们之所以作为框架给予开发者的便捷之处。</p>
<p>6.这个月学习的时候更侧重自己的<strong>英文阅读能力</strong>了，啃Head First系列的书时把不认识的单词全都摘记下来一个个google translate。总之现在觉得英语很重要。</p>

<h2 id="toc_1">Work</h2>
<p>1.随着10号报名平台的上线，也是跟协会的小伙伴们去摆了3天的摊。累归累，但这种活动收获还是颇多，校内宣传也基本到位。PS：怀念那个音箱。</p>
<p>2.参与了院级的创新项目，混了小学妹的队。主要是觉得这个项目的idea很赞，但总隐隐感觉后续的发展绝不会如我们策划预料的那么吻合，潜在许多未知的隐患，真正做好很难。不过还是要赞一下这个idea。</p>
<p>3.把以前存的乱七八糟零碎的东西都整理了一遍，开始合理有秩序地收集资料，方便以后需要的时候查找。也是整理了寝室的书桌和协会的桌子:D</p>
<p>4.跟别人讨论马云强推来往的事，weibo上也是炒得很火。暂不论来往这个产品的好坏，总之觉得马云这事强制性做的比较成功。许多时候产品是一回事，宣传推广是一回事，至于结果，往往取决于两者之和。</p>
<p>5.参加了今年10月的阿里云开发者大会，虽然地点设在偏僻的云溪小镇，到处都是来往的牌子。但是阿里人的热情真是火旺，从头到尾都很贴心。也看到了一些自己想看到的东西，引发了许多对产品的思考。听说随行的小伙伴还见到马云了。</p>
<p>6.简单地思考了下以后的出路。暂时不说，继续努力，毕竟现在还远远不够。</p>

<h2 id="toc_2">Life</h2>
<p>1.国庆还是回了嘉兴，在那闷的慌没事做，呆了几天就匆忙回去了。换了个环境就不知道该去做什么，相信这的确是自己生活上一个赤裸裸的嘲讽。</p>
<p>2.报名参加了今年11月份的杭州国际马拉松，报的短程13800。想去挑战下，或者又可以说是想跟小伙伴们去玩下:D</p>
<p>3.这个月跟K聊了好多，女王一直跟我说羡慕什么的，但我觉得她是纯属瞎搞。然后也是再一次意识到自己最大的缺陷所在，
这种虚拟与现实带来的反差让人很难受，却依旧苦于其中不知如何去突破。</p>
<p>4.这个月中旬写了每天Must to do的清单，但还是有一些没能坚持下来，比如每天一集美剧，每天shanbay打卡。反思。</p>
<p>5.月末不是特别想坐在电脑前了，更倾向于捧着本书看，或者是去思考其他事。</p>

<h2 id="toc_3">End</h2>
<p>这个月大多事是围着<strong>攻防比赛</strong>这条主线进行的，跟9月还有不一样的是，这个月还忙着处理一些情感，一些琐事。
10月，多了点忙碌带来的紧迫节奏感。PS:明天报名平台就关闭啦:D</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Maintainable Javascript Part Two]]></title>
        <author><name>Tinple</name></author>
        <link href="http://tinple.me/tech/maintainable-javascript-2"/>
        <published>2013-10-30T00:00:00+08:00</published>
        <updated>2013-11-01T09:07:33+08:00</updated>
        <id>http://tinple.me/tech/maintainable-javascript-2</id>
        <category scheme="http://tinple.me/tag/javascript/" term="Javascript" label="Javascript" />
        <category scheme="http://tinple.me/tag/maintainable/" term="maintainable" label="maintainable" />
        <content type="html" xml:base="http://tinple.me" xml:lang="en">
            <![CDATA[ <p><strong>Maintainable Javascript continue</strong>, you can read <a href="http://tinple.me/tech/maintainable-javascript-1">Part One</a> to review.</p>

<h3 id="toc_0">Avoid Globals</h3>
<p>Global variables are really special in <code>Javascript</code>, see examples below.</p>

<script>
// A "mistake" semicolon creates a global variable
function doSomething() {
    var count = 10; 
        title = "Maintainable Javascript"; 
}

// This global variable affects window.name
function doAnotherThing() {
    var count = 10;
        name = "Tinple"; 
}
</script>
<div class="highlight"><pre><span class="c1">// A &quot;mistake&quot; semicolon creates a global variable</span>
<span class="kd">function</span> <span class="nx">doSomething</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">count</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span> 
        <span class="nx">title</span> <span class="o">=</span> <span class="s2">&quot;Maintainable Javascript&quot;</span><span class="p">;</span> 
<span class="p">}</span>

<span class="c1">// This global variable affects window.name</span>
<span class="kd">function</span> <span class="nx">doAnotherThing</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">count</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
        <span class="nx">name</span> <span class="o">=</span> <span class="s2">&quot;Tinple&quot;</span><span class="p">;</span> 
<span class="p">}</span>
</pre></div>
<p>And the author recommends that anything that can be defined within the function should be written as such; any data that comes from outside the function should be passed in as an argument. Besides, it is better to use <strong>The One-Global Approach</strong>, like some popular <code>JavaScript libraries</code>.</p>
<div class="highlight"><pre><span class="c1">// only one gloabal object</span>
<span class="kd">var</span> <span class="nx">MaintainableJS</span> <span class="o">=</span> <span class="p">{};</span>

<span class="nx">MaintainableJS</span><span class="p">.</span><span class="nx">Book</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">title</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">title</span> <span class="o">=</span> <span class="nx">title</span><span class="p">;</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">page</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">};</span>

<span class="nx">MaintainableJS</span><span class="p">.</span><span class="nx">Book</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">turnPage</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">direction</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">page</span> <span class="o">+=</span> <span class="nx">direction</span><span class="p">;</span>
<span class="p">};</span>

<span class="nx">MaintainableJS</span><span class="p">.</span><span class="nx">Chapter1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">MaintainableJS</span><span class="p">.</span><span class="nx">Book</span><span class="p">(</span><span class="s2">&quot;part-one&quot;</span><span class="p">);</span>
<span class="nx">MaintainableJS</span><span class="p">.</span><span class="nx">Chapter2</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">MaintainableJS</span><span class="p">.</span><span class="nx">Book</span><span class="p">(</span><span class="s2">&quot;part-two&quot;</span><span class="p">);</span>
<span class="nx">MaintainableJS</span><span class="p">.</span><span class="nx">Chapter3</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">MaintainableJS</span><span class="p">.</span><span class="nx">Book</span><span class="p">(</span><span class="s2">&quot;part-three&quot;</span><span class="p">);</span>
</pre></div>

<h3 id="toc_1">Namespace</h3>
<p>And you can easily create your own namespaces in <code>JavaScript</code> with objects.</p>
<div class="highlight"><pre><span class="kd">var</span> <span class="nx">Books</span> <span class="o">=</span> <span class="p">{};</span>

<span class="c1">// namespace for this book</span>
<span class="nx">Books</span><span class="p">.</span><span class="nx">MaintainableJavascript</span> <span class="o">=</span> <span class="p">{};</span>

<span class="c1">//namespace for another book</span>
<span class="nx">Books</span><span class="p">.</span><span class="nx">HighPerformanceJavascript</span> <span class="o">=</span> <span class="p">{};</span>
</pre></div>
<p>There are also times when each file is simply adding to a namespace.</p>
<div class="highlight"><pre><span class="kd">var</span> <span class="nx">YourGlobal</span> <span class="o">=</span> <span class="p">{</span>
    <span class="nx">namespace</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">ns</span><span class="p">)</span> <span class="p">{</span>
        <span class="kd">var</span> <span class="nx">parts</span> <span class="o">=</span> <span class="nx">ns</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">),</span>
            <span class="nx">object</span> <span class="o">=</span> <span class="k">this</span><span class="p">,</span>
            <span class="nx">i</span><span class="p">,</span> <span class="nx">len</span><span class="p">;</span>

        <span class="k">for</span> <span class="p">(</span><span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">len</span> <span class="o">=</span> <span class="nx">parts</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">len</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">object</span><span class="p">[</span><span class="nx">parts</span><span class="p">[</span><span class="nx">i</span><span class="p">]])</span> <span class="p">{</span>
                <span class="nx">object</span><span class="p">[</span><span class="nx">parts</span><span class="p">[</span><span class="nx">i</span><span class="p">]]</span> <span class="o">=</span> <span class="p">{};</span>
            <span class="p">}</span>
            <span class="nx">object</span> <span class="o">=</span> <span class="nx">object</span><span class="p">[</span><span class="nx">parts</span><span class="p">[</span><span class="nx">i</span><span class="p">]];</span>
        <span class="p">}</span>

        <span class="k">return</span> <span class="nx">object</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="cm">/*</span>
<span class="cm">* Creates both YourGlobal.Books and YourGlobal.Books.MaintainableJavaScript.</span>
<span class="cm">* Neither exists before hand, so each is created from scratch.</span>
<span class="cm">*/</span>
<span class="nx">YourGlobal</span><span class="p">.</span><span class="nx">namespace</span><span class="p">(</span><span class="s2">&quot;Books.MaintainableJavaScript&quot;</span><span class="p">);</span>

<span class="c1">// you can now start using the namespace</span>
<span class="nx">YourGlobal</span><span class="p">.</span><span class="nx">Books</span><span class="p">.</span><span class="nx">MaintainableJavaScript</span><span class="p">.</span><span class="nx">author</span> <span class="o">=</span> <span class="s2">&quot;Nicholas C. Zakas&quot;</span><span class="p">;</span>

<span class="cm">/*</span>
<span class="cm">* Leaves YourGlobal.Books alone and adds HighPerformanceJavaScript to it.</span>
<span class="cm">* This leaves YourGlobal.Books.MaintainableJavaScript intact.</span>
<span class="cm">*/</span>
<span class="nx">YourGlobal</span><span class="p">.</span><span class="nx">namespace</span><span class="p">(</span><span class="s2">&quot;Books.HighPerformanceJavaScript&quot;</span><span class="p">);</span>

<span class="c1">// still a valid reference</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">YourGlobal</span><span class="p">.</span><span class="nx">Books</span><span class="p">.</span><span class="nx">MaintainableJavaScript</span><span class="p">.</span><span class="nx">author</span><span class="p">);</span>

<span class="c1">// You can also start adding new properties right off the method call</span>
<span class="nx">YourGlobal</span><span class="p">.</span><span class="nx">namespace</span><span class="p">(</span><span class="s2">&quot;Books&quot;</span><span class="p">).</span><span class="nx">ANewBook</span> <span class="o">=</span> <span class="p">{};</span>
</pre></div>

<h3 id="toc_2">Modules</h3>
<p>Sorry, but I will try to understand it entirely later.You can read some documents
at will.</p>

<blockquote>
<p><a href="http://seajs.org/docs/">Sea.js</a></p>
<p><a href="http://requirejs.org/">Require.js</a></p>
</blockquote>

<h3 id="toc_3">Event Handling</h3>
<p>Event handling is an important part of any JavaScript application. All JavaScript is tied to the UI through events.And the following rules may improve your code.</p>
<div class="highlight"><pre><span class="c1">// Rule #1</span>
<span class="c1">// It is better to separate application logic</span>
<span class="kd">var</span> <span class="nx">MyApplication</span> <span class="o">=</span> <span class="p">{</span>

    <span class="nx">handleClick</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">showPopup</span><span class="p">(</span><span class="nx">event</span><span class="p">);</span>
    <span class="p">},</span>

    <span class="nx">showPopup</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
        <span class="kd">var</span> <span class="nx">popup</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;popup&quot;</span><span class="p">);</span>
        <span class="nx">popup</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span> <span class="o">=</span> <span class="nx">event</span><span class="p">.</span><span class="nx">clientX</span> <span class="o">+</span> <span class="s2">&quot;px&quot;</span><span class="p">;</span>
        <span class="nx">popup</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span> <span class="o">=</span> <span class="nx">event</span><span class="p">.</span><span class="nx">clientY</span> <span class="o">+</span> <span class="s2">&quot;px&quot;</span><span class="p">;</span>
        <span class="nx">popup</span><span class="p">.</span><span class="nx">className</span> <span class="o">=</span> <span class="s2">&quot;reveal&quot;</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="nx">addListener</span><span class="p">(</span><span class="nx">element</span><span class="p">,</span> <span class="s2">&quot;click&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">MyApplication</span><span class="p">.</span><span class="nx">handleClick</span><span class="p">(</span><span class="nx">event</span><span class="p">);</span>
<span class="p">});</span>

<span class="c1">// Rule #2</span>
<span class="c1">// Do not Pass the Event Object Around</span>
<span class="kd">var</span> <span class="nx">MyApplication</span> <span class="o">=</span> <span class="p">{</span>

    <span class="nx">handleClick</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>

        <span class="c1">// assume DOM Level 2 events support</span>
        <span class="nx">event</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
        <span class="nx">event</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span>

        <span class="c1">// pass to application logic</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">showPopup</span><span class="p">(</span><span class="nx">event</span><span class="p">.</span><span class="nx">clientX</span><span class="p">,</span> <span class="nx">event</span><span class="p">.</span><span class="nx">clientY</span><span class="p">);</span>
    <span class="p">},</span>

    <span class="nx">showPopup</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">)</span> <span class="p">{</span>
        <span class="kd">var</span> <span class="nx">popup</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;popup&quot;</span><span class="p">);</span>
        <span class="nx">popup</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span> <span class="o">=</span> <span class="nx">x</span> <span class="o">+</span> <span class="s2">&quot;px&quot;</span><span class="p">;</span>
        <span class="nx">popup</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span> <span class="o">=</span> <span class="nx">y</span> <span class="o">+</span> <span class="s2">&quot;px&quot;</span><span class="p">;</span>
        <span class="nx">popup</span><span class="p">.</span><span class="nx">className</span> <span class="o">=</span> <span class="s2">&quot;reveal&quot;</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="nx">addListener</span><span class="p">(</span><span class="nx">element</span><span class="p">,</span> <span class="s2">&quot;click&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">MyApplication</span><span class="p">.</span><span class="nx">handleClick</span><span class="p">(</span><span class="nx">event</span><span class="p">);</span>
<span class="p">});</span>
</pre></div>

<h3 id="toc_4">Avoid Null Comparisons</h3>

<ul>
<li>Use <code>typeof</code> operator to detect <strong>Primitive Values (string, number, boolean, undefined)</strong></li>
<li>Use <code>instanceof</code> operator to detect <strong>Reference Values (Obejct, Array, Date, Error, RegExp)</strong></li>
<li>Use <code>typeof</code> operator to detect <strong>Functions (also works across frames
but not IE8)</strong></li>
<li>Use <code>in</code> operator to detect <strong>the presence of a property (hasOwnProperty() to make sure of an instance property)</strong></li>
<li>Detect <strong>Array</strong></li>
</ul>
<div class="highlight"><pre><span class="kd">function</span> <span class="nx">isArray</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span> <span class="o">===</span> <span class="s2">&quot;function&quot;</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">value</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="o">===</span> <span class="s2">&quot;[object Array]&quot;</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
<p><strong>Maintainable Javascript Part Two over</strong>.</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Maintainable Javascript Part One]]></title>
        <author><name>Tinple</name></author>
        <link href="http://tinple.me/tech/maintainable-javascript-1"/>
        <published>2013-10-28T00:00:00+08:00</published>
        <updated>2013-11-01T12:50:04+08:00</updated>
        <id>http://tinple.me/tech/maintainable-javascript-1</id>
        <category scheme="http://tinple.me/tag/javascript/" term="Javascript" label="Javascript" />
        <category scheme="http://tinple.me/tag/maintainable/" term="maintainable" label="maintainable" />
        <content type="html" xml:base="http://tinple.me" xml:lang="en">
            <![CDATA[ <p>Last two days I just have finished the book 《Maintainable Javascript》.</p>

<blockquote>
<p>When you come to work, you&#39;re not writing code for you, you&#39;re
writing code for those who come after you.</p>
</blockquote>
<p>I really like the words above the author Nicholas C. Zakas said, and this book really
improves someone who may not work in professional team like me, or someone who wants to organize a team.The
following is just my note that I regard it useful, but it may not really meets you.</p>

<h2 id="toc_0">Part one ：Style Guidelines</h2>

<blockquote>
<p>Programs are meant to be read by humans and only incidentally for computers to execute.</p>
</blockquote>

<h4 id="toc_1">null</h4>
<p><strong><code>null</code></strong> should be used in just a few cases:</p>

<ol>
<li>To initialize a variable that may later be assigned an object value</li>
<li>To compare against an initialized variable that may or may not have an object value.</li>
<li>To pass into a function where an object is expected</li>
<li>To return from a function where an object is expected</li>
</ol>
<p>And the best way to think about null is as a placeholder for an object. </p>

<h4 id="toc_2">for-in loop</h4>
<p>As <code>for-in</code> loop returns not only instance properties of an object but also all
properties it inherits through the prototype.Hence, it is best to filter the <code>for-in</code> loop to only instance properties by using <code>hasOwnProperty()</code>.</p>
<div class="highlight"><pre><span class="kd">var</span> <span class="nx">prop</span><span class="p">;</span>
<span class="k">for</span> <span class="p">(</span><span class="nx">prop</span> <span class="k">in</span> <span class="nx">object</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">object</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">prop</span><span class="p">))</span> <span class="p">{</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Property name is&quot;</span> <span class="o">+</span> <span class="nx">prop</span><span class="p">);</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Property value is&quot;</span> <span class="o">+</span> <span class="nx">object</span><span class="p">[</span><span class="nx">prop</span><span class="p">]);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
<p>And remember do not use <code>for-in</code> to iterate over members of an array.</p>

<h4 id="toc_3">Equality</h4>
<p>One of the main areas in which <strong>type coercion</strong> occurs is with the use of equality operators, <code>==</code> and <code>!=</code>. </p>
<p>And <strong>other points</strong> in this part I just easily skip.</p>

<h2 id="toc_4">Part two ：Programming Practices</h2>

<h3 id="toc_5">Loose Coupling of UI Layers</h3>
<p>Loose coupling is achieved when you are able to make changes to a single component without making changes to other components. And it is achieved by limiting each component&#39;s knowledge of the larger system.</p>

<ul>
<li>Keep JavaScript Out of CSS (css expression denied)</li>
<li>Keep CSS Out of JavaScript</li>
<li><strong>Keep JavaScript Out of HTML</strong></li>
</ul>
<div class="highlight"><pre>// ugly code
<span class="nt">&lt;button</span> <span class="na">onclick=</span><span class="s">&quot;doSomething()&quot;</span> <span class="na">id=</span><span class="s">&quot;action-btn&quot;</span><span class="nt">&gt;</span>Click Me<span class="nt">&lt;/button&gt;</span>
</pre></div>
<div class="highlight"><pre><span class="c1">// use JavaScript methods for adding event handlers</span>
<span class="kd">function</span> <span class="nx">addListener</span><span class="p">(</span><span class="nx">target</span><span class="p">,</span> <span class="nx">type</span><span class="p">,</span> <span class="nx">handler</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">target</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">target</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">type</span><span class="p">,</span> <span class="nx">handler</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">target</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">target</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span> <span class="o">+</span> <span class="nx">type</span><span class="p">,</span> <span class="nx">handler</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="nx">target</span><span class="p">[</span><span class="s2">&quot;on&quot;</span> <span class="o">+</span> <span class="nx">type</span><span class="p">]</span> <span class="o">=</span> <span class="nx">handler</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="kd">var</span> <span class="nx">btn</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;action-btn&quot;</span><span class="p">);</span>
<span class="nx">addListener</span><span class="p">(</span><span class="nx">btn</span><span class="p">,</span> <span class="s2">&quot;click&quot;</span><span class="p">,</span> <span class="nx">doSomething</span><span class="p">);</span>
</pre></div>

<ul>
<li><strong>Keep HTML Out of JavaScript</strong></li>
</ul>
<div class="highlight"><pre><span class="c1">// Bad </span>
<span class="kd">var</span> <span class="nx">div</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;my-div&quot;</span><span class="p">);</span>
<span class="nx">div</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="s2">&quot;&lt;h3&gt;Error&lt;/h3&gt;&lt;p&gt;Invalid e-mail address.&lt;/p&gt;&quot;</span><span class="p">;</span>
</pre></div>
<p>Embedding HTML strings inside your JavaScript is a bad practice for a number of
reasons.And there are several ways to accomplish this in a loosely coupled manner.</p>

<h4 id="toc_6">1.Load from the Server</h4>
<p>keep the templates remote and use an XMLHttpRequest object to retrieve
additional markup, it is much more convenient for single-page applications than 
multiple-page applications. But when using this method, you should pay attention 
to <code>XSS</code> attack, and it requires lots of transcode and decode strategy between client and server to defense.</p>
<div class="highlight"><pre><span class="kd">function</span> <span class="nx">loadDialog</span><span class="p">(</span><span class="nx">name</span><span class="p">,</span> <span class="nx">oncomplete</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">xhr</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">();</span>
    <span class="nx">xhr</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="s2">&quot;get&quot;</span><span class="p">,</span> <span class="s2">&quot;/js/dialog/&quot;</span> <span class="o">+</span> <span class="nx">name</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>

    <span class="nx">xhr</span><span class="p">.</span><span class="nx">onreadystatechange</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>

        <span class="k">if</span> <span class="p">(</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">==</span> <span class="mi">4</span> <span class="o">&amp;&amp;</span> <span class="nx">xhr</span><span class="p">.</span><span class="nx">status</span> <span class="o">==</span> <span class="mi">200</span><span class="p">)</span> <span class="p">{</span>

            <span class="kd">var</span> <span class="nx">div</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;dlg-holder&quot;</span><span class="p">);</span>
            <span class="nx">div</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">xhr</span><span class="p">.</span><span class="nx">responseText</span><span class="p">;</span>
            <span class="nx">oncomplete</span><span class="p">();</span>

        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="c1">// wrong handler</span>
        <span class="p">}</span>
    <span class="p">};</span>

    <span class="nx">xhr</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="kc">null</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>

<h4 id="toc_7">2.Simple Client-Side Templates</h4>
<p>Client-side Templates are markup pieces with slots that must be filled by JavaScript in order to be complete.For example:</p>
<div class="highlight"><pre><span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;%s&quot;</span><span class="nt">&gt;</span>%s<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</pre></div>
<p>And you can make templates accessible to Javascript by embedding them directly
in the HTML page.Maybe a function will make it.</p>
<div class="highlight"><pre><span class="kd">function</span> <span class="nx">sprintf</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">args</span> <span class="o">=</span> <span class="nx">arguments</span><span class="p">;</span>
    <span class="k">return</span> <span class="nx">text</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/%s/g</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="p">(</span><span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">args</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span> <span class="o">?</span> <span class="nx">args</span><span class="p">[</span><span class="nx">i</span><span class="o">++</span><span class="p">]</span> <span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">;</span>
    <span class="p">});</span>
<span class="p">}</span>

<span class="c1">// usage</span>
<span class="kd">var</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">sprintf</span><span class="p">(</span><span class="nx">templateText</span><span class="p">,</span> <span class="s2">&quot;/item/4&quot;</span><span class="p">,</span> <span class="s2">&quot;Fourth item&quot;</span><span class="p">);</span>
</pre></div>
<p>It is ok to include the templates as an comment or embed templates into an HTML
page by using a <code>&lt;script&gt;</code> element with a custom <code>type</code> property.</p>
<div class="highlight"><pre>// comment
<span class="nt">&lt;ul</span> <span class="na">id=</span><span class="s">&quot;mylist&quot;</span><span class="nt">&gt;</span><span class="c">&lt;!--&lt;li id=&quot;item%s&quot;&gt;&lt;a href=&quot;%s&quot;&gt;%s&lt;/a&gt;&lt;/li&gt;--&gt;</span>
<span class="nt">&lt;/ul&gt;</span>
</pre></div>

<pre><code>/* script element, remember to strip any leading white space 
that may be in the template, because template text is  
on the line after the opening script tag */
&lt;script type=&quot;text/x-my-template&quot; id=&quot;list-item&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;%s&quot;&gt;%s&lt;/a&gt;&lt;/li&gt;
&lt;/script&gt;</code></pre>

<h4 id="toc_8">3.Complex Client-Side Templates</h4>
<p>Complex Client-Side Templates may do some escaping, well, you can use some robust templates like <a href="http://handlebarsjs.com/">Handlebars</a>, which is a complete client-side templating system designed to work with JavaScript in the browser.</p>
<p><strong>Maintainable Javascript Part One over</strong>.</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Homework for C plus]]></title>
        <author><name>Tinple</name></author>
        <link href="http://tinple.me/tech/homework-for-c-plus"/>
        <published>2013-10-16T00:00:00+08:00</published>
        <updated>2013-11-01T09:21:07+08:00</updated>
        <id>http://tinple.me/tech/homework-for-c-plus</id>
        <content type="html" xml:base="http://tinple.me" xml:lang="en">
            <![CDATA[ <h2 id="toc_0">For 2013-10-17 C plus homework</h2>

<h3 id="toc_1">Answer:</h3>

<h4 id="toc_2">Question 1:</h4>
<div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>

<span class="n">using</span> <span class="n">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">;</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;请输入两个整数&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">a</span> <span class="o">&gt;&gt;</span> <span class="n">b</span><span class="p">;</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">a</span> <span class="o">&gt;</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">cout</span><span class="o">&lt;&lt;</span> <span class="n">a</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="p">}</span> <span class="n">elseif</span> <span class="p">(</span><span class="n">a</span> <span class="o">&lt;</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">b</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;两个数相等&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>

<h4 id="toc_3">Question 2:</h4>
<div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>

<span class="n">using</span> <span class="n">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>

    <span class="kt">int</span> <span class="n">a</span><span class="p">;</span>
    <span class="kt">double</span> <span class="n">b</span><span class="p">;</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;请输入两个数，第一个为整数，第二个为浮点数&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">a</span> <span class="o">&gt;&gt;</span> <span class="n">b</span><span class="p">;</span>

    <span class="k">if</span><span class="p">(</span><span class="n">a</span> <span class="o">&gt;</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">a</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="p">}</span> <span class="n">elseif</span> <span class="p">(</span><span class="n">a</span><span class="o">&lt;</span><span class="n">b</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">b</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
       <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;两个数相等&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>

<h4 id="toc_4">Question 3:</h4>
<div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>

<span class="n">using</span> <span class="n">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>

   <span class="kt">double</span> <span class="n">f</span><span class="p">,</span> <span class="n">c</span><span class="p">;</span>
   <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;请输入摄氏温度&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
   <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">c</span><span class="p">;</span>

   <span class="n">f</span> <span class="o">=</span> <span class="n">c</span> <span class="o">*</span> <span class="mf">9.0</span> <span class="o">/</span> <span class="mf">5.0</span> <span class="o">+</span> <span class="mf">21.0</span><span class="p">;</span>

   <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;转换为华氏温度&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">f</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

   <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>

<span class="p">}</span>
</pre></div>

<h4 id="toc_5">Question 4.1:</h4>
<div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>

<span class="n">using</span> <span class="n">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>

   <span class="kt">double</span> <span class="n">miles</span><span class="p">,</span> <span class="n">kilometres</span><span class="p">;</span>
   <span class="k">const</span> <span class="kt">double</span> <span class="n">N</span> <span class="o">=</span> <span class="mf">1.60934</span><span class="p">;</span>
   <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;请输入metres&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
   <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">kilometres</span><span class="p">;</span>
   <span class="n">miles</span> <span class="o">=</span> <span class="n">kilometres</span> <span class="o">/</span> <span class="n">N</span><span class="p">;</span>
   <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;转换miles为&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
   <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">miles</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

   <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>

<span class="p">}</span>
</pre></div>

<h4 id="toc_6">Question 4.2:</h4>
<div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>

<span class="cp">#define N 1.60934</span>

<span class="n">using</span> <span class="n">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>

   <span class="kt">double</span> <span class="n">miles</span><span class="p">,</span> <span class="n">metres</span><span class="p">;</span>
   <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;请输入metres&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
   <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">metres</span><span class="p">;</span>
   <span class="n">miles</span> <span class="o">=</span> <span class="n">metres</span> <span class="o">/</span> <span class="n">N</span><span class="p">;</span>
   <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;转换miles为&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
   <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">miles</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

   <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>

<span class="p">}</span>
</pre></div>

<h4 id="toc_7">Question 5:</h4>
<div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>

<span class="n">using</span> <span class="n">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>

   <span class="kt">int</span> <span class="n">num</span><span class="p">,</span> <span class="n">t</span><span class="p">;</span>
   <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;请输入一个整数&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
   <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">num</span><span class="p">;</span>

   <span class="n">t</span> <span class="o">=</span> <span class="n">num</span> <span class="o">%</span> <span class="mi">10000</span><span class="p">;</span>
   <span class="n">num</span> <span class="o">=</span> <span class="n">num</span> <span class="o">-</span> <span class="n">t</span> <span class="o">+</span> <span class="mi">1111</span><span class="p">;</span>

   <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;右四位变为1111&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
   <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">num</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

   <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>

<span class="p">}</span>
</pre></div>

<h2 id="toc_8">For 2013-10-16 C plus homework</h2>

<h3 id="toc_9">链接错误</h3>
<div class="highlight"><pre><span class="cp">#include&lt;iostream&gt;</span>
<span class="n">using</span> <span class="n">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main_fake</span><span class="p">()</span> <span class="p">{</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Hello World!&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
<p><strong>MSVCRTD.lib(crtexe.obj) : error LNK2019: 无法解析的外部符号 <em>main，该符号在函数 _</em>_tmainCRTStartup 中被引用</strong></p>

<h3 id="toc_10">编译错误</h3>
<div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>
<span class="n">using</span> <span class="n">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="n">cout2</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Hello World!&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
<p><strong>cout2: 未声明的标识符</strong></p>

<h3 id="toc_11">运行错误 - 缺少运行库</h3>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Securing web application Part One]]></title>
        <author><name>Tinple</name></author>
        <link href="http://tinple.me/tech/securing-web-application-1"/>
        <published>2013-10-10T00:00:00+08:00</published>
        <updated>2013-11-01T09:19:53+08:00</updated>
        <id>http://tinple.me/tech/securing-web-application-1</id>
        <category scheme="http://tinple.me/tag/security/" term="security" label="security" />
        <category scheme="http://tinple.me/tag/defence/" term="defence" label="defence" />
        <content type="html" xml:base="http://tinple.me" xml:lang="en">
            <![CDATA[ <p>It would be a hard decision for me to write down this essay.But I still want to
express some security opinion and give the solution for some attack that I used to do.</p>

<h2 id="toc_0">SQL Injection</h2>
<p>When I learned <code>PHP</code> last term, I just only finished a simple web application and ensured the ability it should have.But it is really dangerous leaving web application without any other defences.You see, something with SQL could be attacked by some sneaky tricks.</p>
<p>Considering a situation that I make a platform for users to join a competition, 
and at first they should apply but the <strong>privilege field</strong> in database that for 
users logining in platform is 0(same as false), I may change it to
1 few days later.</p>
<p>And if I design my table structure like this(I use mysql):</p>
<div class="highlight"><pre><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">EXAMPLE</span> <span class="p">(</span>
    <span class="n">ID</span>   <span class="nb">INTEGER</span> <span class="n">UNSIGNED</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="n">AUTO_INCREMENT</span><span class="p">,</span>
    <span class="n">USERNAME</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">40</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
    <span class="n">PASSWORD</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">40</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
    <span class="n">PRIVILEGE</span> <span class="n">TINYINT</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="k">DEFAULT</span> <span class="mi">0</span><span class="p">,</span>

    <span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="p">(</span><span class="n">ID</span><span class="p">)</span>
<span class="p">);</span>
</pre></div>
<p>And my form page receives datas which are posted and immediately inserted into database without any filter: </p>
<div class="highlight"><pre><span class="x">$username = $_POST[&#39;username&#39;];</span>
<span class="x">$pwd = $_POST[&#39;password&#39;];</span>

<span class="x">//..some database connection codes</span>
<span class="x">$query = &quot;INSERT INTO EXAMPLE VALUES(&#39;$username&#39;, &#39;$pwd&#39;, 0)&quot;;</span>
<span class="x">//$dbc is a mysql connection return</span>
<span class="x">mysqli_query($dbc, $query);</span>

<span class="x">//any other codes</span>
</pre></div>
<p>If someone put <code>passwor&#39;, 1) --</code> into password field, the sql query will be 
<code>INSERT INTO EXAMPLE VALUES(&#39;someone&#39;, &#39;password&#39;, 1) -- &#39;, 0)</code>, and the double-hyphen comment causes the rest of the line of SQL code to be ignored!Hence,
his privilege will be 1.And this attack is known as an <strong>SQL Injection</strong>.</p>
<p>And something we could do to defense it is filter any datas that user can write into
database, an example defence:</p>
<div class="highlight"><pre><span class="x">$username = mysqli_real_escape($dbc, trim($_POST[&#39;username&#39;]));</span>
<span class="x">$pwd = mysqli_real_escape($dbc, trim($_POST[&#39;password&#39;]));</span>
</pre></div>
<p>Sure, you can alse use <strong>regular expression</strong> to filter it.Besides, the privilege field could be designed to <code>DEFAULT 0</code> so that it would not be inserted any more, or just revoke the <code>INSERT privilege(field)</code> privilege in mysql for users, like we will talk below. </p>

<h2 id="toc_1">Mysql privileges</h2>
<p>Like some other man, I used <code>Mysql</code> as my database to store datas in my all project.
But I am not professional, just use it to combine with <code>PHP</code>.
I didn&#39;t care the mysql privileges when I executed a sql statement, just let it runned as I expected.</p>
<p>And now I realized the <strong>big potential</strong> problem that I have made. I didn&#39;t set privileges accurately for mysql users.</p>
<p>Above example again.This time we create another mysql user named user_example at begin.And we could set this mysql user only few privileges when users apply:</p>
<div class="highlight"><pre><span class="o">//</span><span class="p">[...]</span> <span class="n">should</span> <span class="n">be</span> <span class="n">replaced</span> <span class="n">depends</span> <span class="k">on</span> <span class="n">you</span>
<span class="k">GRANT</span> <span class="k">INSERT</span><span class="p">(</span><span class="o">`</span><span class="n">USERNAME</span><span class="o">`</span><span class="p">,</span> <span class="o">`</span><span class="n">PASSWORD</span><span class="o">`</span><span class="p">)</span> <span class="k">ON</span> <span class="o">`</span><span class="p">[</span><span class="k">database</span><span class="p">]</span><span class="o">`</span><span class="p">.</span><span class="o">`</span><span class="n">EXAMPLE</span><span class="o">`</span> 
<span class="k">TO</span> <span class="o">`</span><span class="n">user_example</span><span class="o">`@</span><span class="p">[</span><span class="n">ip_address</span><span class="p">];</span>
</pre></div>
<p>Like this, users will not be able to do something like INSERT privilege field into database.And if you have a backstage to manage platform, you may also set the second mysql user privilege accurately, just use two mysql users and <strong>ensure their respective privilege</strong> in your web application, accurating privileges to your every table field.And it means a lot about security to your web application.</p>

<h2 id="toc_2">CSRF &amp;&amp; Token defense</h2>
<p><strong>Cross-site request forgery</strong>, which exploits the trust that a site has in user\&#39;s
browser.</p>

<blockquote>
<blockquote>
<p>The attack works by including a link or script in a page that accesses a site to which the user is known (or is supposed) to have been authenticated.</p>
</blockquote>
</blockquote>
<p>I am sorry that I know little about it.But you could learn it more on <a href="http://en.wikipedia.org/wiki/Cross-site_request_forgery">wiki</a>.Have fun!</p>

<h2 id="toc_3">End</h2>
<p>Nothing is ever truly 100% secure, so we are always talking about degrees of security.The above three points may let you realize the security about your web
application, and just try to make preventions to protect it!</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Monthly review for Sep.2013]]></title>
        <author><name>Tinple</name></author>
        <link href="http://tinple.me/life/monthly-review-for-sep-2013"/>
        <published>2013-10-01T00:00:00+08:00</published>
        <updated>2013-10-29T16:17:16+08:00</updated>
        <id>http://tinple.me/life/monthly-review-for-sep-2013</id>
        <category scheme="http://tinple.me/tag/month-review/" term="month-review" label="month-review" />
        <category scheme="http://tinple.me/tag/life/" term="life" label="life" />
        <content type="html" xml:base="http://tinple.me" xml:lang="en">
            <![CDATA[ <p>序:前段时间跟人聊起各自童年的一些故事，那个老伙计滔滔不绝说得很开心，可我却抓破脑皮也只能闪过一些片段。我才发现自己的记忆是那么短暂而又不可或缺。因此我想从现在这个拼搏的年纪开始，每月进行一次总结，权当青春。</p>

<h2 id="toc_0">Tech:</h2>
<p>1.月初在writing上写了第一篇博客，也暗自下决心坚持写下去，哪怕都是些乱七八糟的东西，然后自己搭了个liquidluck，风格甚是喜欢，干干净净。</p>
<p>2.也是月初在Github上托管了自己的静态博客，然后在godaddy上花了8刀买了个性.me域名，从此爱上markdown的写作风格。</p>
<p>3.初步学习了git，感受到版本控制管理机制的强大，以后会常跟它打交道。</p>
<p>4.碎片般优化了攻防大赛平台，何少后续讲的许多相关安全性质的东西都深受启发。</p>
<p>5.把windows格了，装了个应急用的ubuntu，试用了几天感觉不错，只是到现在也还没能解决桌面环境崩溃假死的情况，自带桌面和awesome都崩过:(</p>
<p>5.用了几天Ubuntu，熟练了许多linux下的命令，感觉再过一年差不多应该入门了。</p>
<p>6.功防平台用的是nginx，然后部署的时候服务器方面吃了许多nginx的知识，初步对nginx配置文件有了较大的了解，以后要补服务端的知识。</p>
<p>7.在node下成功实现手机远程控制自己写的幻灯片，考虑接触nodejs。</p>

<h2 id="toc_1">Work:</h2>
<p>1.跟协会的小伙伴们一起准备开学季的工作，从学院爆炸般的宣讲会到接近300人的面试，再到第一次新生培训，面对每年都能把1#128挤爆的新生们，自己也是第一次站在前面以学长的身份向新生们传输思想。</p>
<p>2.也是那天的新生培训，听到杰哥的讲话，深受感触，只能隐约记起其中两点。</p>

<blockquote>
<p>大一是决定大学四年最重要的一年。</p>
<p>付出总是会有回报的。</p>
</blockquote>
<p>3.第一次听华哥讲开源，也是第一次对开源有了更进一步的认识。</p>

<blockquote>
<p>做开源的大多是以前从开源中受益，然后决定自己也开源让别人受益。</p>
<p>开源也是一种发展，通过开源代码能不断改进不断进步。</p>
<p>开源只有学生和大公司能做，因为没有经费压力。</p>
</blockquote>
<p>4.现在做研发大多都是独自一人去做，还没接触过多人协作。但是一旦多人协作起来，自己担心的最大的问题就是在开发投入前，没有人把需求明确，没人对需求进行版本分离，没有合理的分工，结果到最后都是边做边想边挠头，一头乱。</p>
<p>5.虽然没有在一个技术之外的社团呆过，曾经也是一面就被院党建怒刷。但是说起一些组织上的事，看着各个社团在开学初忙里忙外，自己也有几点看法。</p>

<blockquote>
<p>一份工作所需要的资源与工作本身并没有太大的关系，一件事情被膨胀出来的重要性和复杂性，与完成这件事情花的时间成正比。</p>
<p><a href="http://wiki.mbalib.com/wiki/%E5%BD%BC%E5%BE%97%E5%8E%9F%E7%90%86">彼得原理</a></p>
</blockquote>

<h2 id="toc_2">Life:</h2>
<p>1.有得必有失。自己清楚自己得到了什么学会了什么，也清楚自己正在逐步疏远什么，失去什么，诸事为难只求兼顾，愿能理解原谅。</p>
<p>2.升大二后生活不再像刚入学般具有挑战性，很难再有去年跟An air们一起全身投入各种活动，不可否认大一跟An air们在一起是最欢乐的时光。</p>
<p>3.越是陷入技术越深，越是对生活中的一些细节警觉，昔日的故友，好友的关切，父母的慰问，很是怕因为固执己见失去更重要的东西，也尝试去处理好。</p>
<p>4.开学后生活的节奏感已被定型，大部分时间是呆在协会，有课上课，不喜欢的翘，然后组团吃饭，完后继续协会，最后10点半回寝。虽说枯燥平澹，但也的确忙的有来有回，乐于其中，或许这个10月要改变什么。</p>
<p>5.偶尔抽空跟某人也是聊了几句，只不过两人好像都太忙太忙了，聊的也根本不在该在的点上，思来想去还是自己的问题最大，谁会去勉强自己的感情呢，何况若还是无心。</p>

<h2 id="toc_3">End:</h2>
<p>总的来说这个9月过得很充实，忙得开心，心里也觉得踏实，各方面都还行。展望10月的到来:D</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[ISA Training Part One]]></title>
        <author><name>Tinple</name></author>
        <link href="http://tinple.me/tech/isa-training-1"/>
        <published>2013-09-27T00:00:00+08:00</published>
        <updated>2013-11-02T13:00:44+08:00</updated>
        <id>http://tinple.me/tech/isa-training-1</id>
        <category scheme="http://tinple.me/tag/development/" term="development" label="development" />
        <category scheme="http://tinple.me/tag/isa/" term="isa" label="isa" />
        <content type="html" xml:base="http://tinple.me" xml:lang="en">
            <![CDATA[ <h2 id="toc_0">Our surroundings</h2>
<p>We are born in an <strong>absurd</strong> surroundings, anyway, it is really hard to release yourself 
in the prior education years.And I do not know how the bases of us hate <strong>the Oriented education.</strong>
When we come to university, Someone may complain about the differences of the foundation
between us.</p>

<blockquote>
<blockquote>
<p>He seems to know a lot about the things, but I almost have no idea! What a fuck!</p>
</blockquote>
</blockquote>
<p>When the <strong>psychological gap</strong> exists, you may find the world unfair. And Someone may decide
to change it.</p>

<h2 id="toc_1">Interesting</h2>

<blockquote>
<blockquote>
<p>As for interesting concept, everyone is cup of tea.</p>
</blockquote>
</blockquote>

<h2 id="toc_2">So what to do</h2>
<p>It is really hard to say what we really want to do now when we come to university, because the
life is full of excitement in the early time and we are almost busy with class lessons.</p>
<p>Howerver, it is fun.The most important things is what we think and decide to do, may be 
just one thing to relax ourselves, or to change the world. It almost <strong>depends on</strong> ourselves.</p>

<h2 id="toc_3">why not we begin to start it</h2>
<p>Once we had determined, why not we begin to start it?
Everything is difficult when we start it.Almost like a series of mountains.But if you
get it in the first time, you will feel delighted and may have braves to try any other
things.
It is the first step that costs troublesome.</p>

<h2 id="toc_4">Get trouble &amp;&amp; Solution</h2>
<p>We must meet trouble when we stick to everything, it is normal.
Hence, we must find the way to solve it, and it shadows our ability.
Everyone may try to exercise it and it is really essential.</p>

<h2 id="toc_5">Persisting</h2>
<p>I can not imagine how the one to be if he persist the processing, begining to start one
determination and continually solving the problem.And what I think is that is called 
<strong>development</strong>.</p>

<h2 id="toc_6">What is for</h2>
<p>It belongs to what you think…</p>

<h2 id="toc_7">And the future…</h2>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[写在开学前]]></title>
        <author><name>Tinple</name></author>
        <link href="http://tinple.me/life/write-before-start"/>
        <published>2013-09-14T00:00:00+08:00</published>
        <updated>2013-10-29T14:25:10+08:00</updated>
        <id>http://tinple.me/life/write-before-start</id>
        <category scheme="http://tinple.me/tag/life/" term="life" label="life" />
        <category scheme="http://tinple.me/tag/development/" term="development" label="development" />
        <content type="html" xml:base="http://tinple.me" xml:lang="en">
            <![CDATA[ <p>转眼马上就要开学了，心中那份未知的悸动也悄悄滋生，总感觉将要到来的一些事自己没太多底，也不知道该如何才能让自己信心满满。很久以前就有人告诫我尽力做好每一件别人信任你托付你的事和你自己想去做的事。现在想来，真正做好一件事远非自己在做之前估摸着只要硬着头皮去做就能一切迎刃而解。</p>

<blockquote>
<blockquote>
<p>你有没有想过，有时候花太多的精力在你愿意为之倾付的事，但这件事情最后能带给你的领会并不多。</p>
</blockquote>
</blockquote>
<p>很多时候我想，那么多你期待去做的事，的确存在如上述所言，做完后并没有一种释然，更多的时候带来的是一种懊悔去做这件事这样的想法。</p>
<p>但也许我可以这样理解这两者之间既矛盾又让人举棋不定的微妙关系：担当。这一点于内向者 ，因他人的信任而去做他人托付的事很多时候心理压力甚于自己渴望做的事。而一旦有了基于这样的想法后，许多时候所做的事也不再是基于自己相关的利益的出发，更多时候是去承担， 即便这事于你毫无利益甚至有所不利。</p>
<p>然后再谈谈大二，之前在<a href="http://tinple.me/life/pick-up-writing">重拾writing</a>里随性列了一条条新学期所想做的事，现在看来倒也是完成了其中的几条，也是略感欣慰。但仔细看一看， 不免也有点担忧。自己所列的基本上是基于自己的，无关乎外界，无关乎家庭，也无关乎现在身边的人。请容忍一个内向的人很多时候考虑的时候基于保护自己。意识到这点以后，接下来心中也有了一定的底。</p>

<blockquote>
<blockquote>
<p>许多时候你所一如既往固执般坚持着的，往往在末者看来是错的。</p>
</blockquote>
</blockquote>
<p>或许你自己也不知道哪一天回头看看现在所做的一些事，是多么的低俗、毫无价值。说的过了。</p>
<p>接着谈谈学习。大一一年的课自己上的有多水自己心里也最清楚，要么自学，要么期末勐补， 说白了就是上课没听过课。为什么我会有这样的想法？跟大多数人一样，觉得大学上课没必要像以前那样，每节课都要去学好，觉得大学没有条条框框限制着了，就要装出一副洒脱的样子享受大学无拘无束的日子。又或者更多的时候可以解释为大学让人没有安全感，许多人怀疑上过的课能给自己将来带来多少可能性，毕竟上的是一样的课，不是说你努力学的好就能比别人多份希望， 就如考证一样，往往对结果毫无影响。</p>

<blockquote>
<blockquote>
<p>闻道有先后，术业有专攻。</p>
</blockquote>
</blockquote>
<p>一来是大学的课程，二来便是专业的问题。大部分人不知道自己所在的专业将来能干嘛，基本上对大学所定位的专业毫无感觉，更多的时候是直接去询问长一辈的人，甚至连自己的想法都没夹杂一丝。在这样的情况下，再是跟紧大学的相关&quot;量身定制&quot;基本上就是三个和尚没水喝的喜闻乐见的剧情了。</p>
<p>说了这么多贬低的话，其实没必要去相信，我自己也不相信自己说的。正所谓术业有专攻， 一旦你喜爱自己所在的领域，去专心学习其实是件很享受的事。其实大二有很多课我非常感兴趣， 很多时候我觉得学习的确是件美好的事，尤其是学习那些勾着自己心的东西，那种充实的感觉，很温暖。</p>
<p>最后说说感情。算了不说了。</p>
<p>懒懒散散说了那么多无关痛痒的事，也只是对大二定了个基调。不过谁知道呢，也许将来有一天回过头来将这一切全盘否定。姑且就这么进行下去吧。<strong>也祝明天安协迎新宣讲顺利:D</strong></p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[内向者优势]]></title>
        <author><name>Tinple</name></author>
        <link href="http://tinple.me/life/the-introvert-advantage-1"/>
        <published>2013-09-08T00:00:00+08:00</published>
        <updated>2013-10-29T14:24:46+08:00</updated>
        <id>http://tinple.me/life/the-introvert-advantage-1</id>
        <category scheme="http://tinple.me/tag/introvert/" term="introvert" label="introvert" />
        <category scheme="http://tinple.me/tag/thought/" term="thought" label="thought" />
        <category scheme="http://tinple.me/tag/life/" term="life" label="life" />
        <category scheme="http://tinple.me/tag/advantage/" term="advantage" label="advantage" />
        <content type="html" xml:base="http://tinple.me" xml:lang="en">
            <![CDATA[ <p>该从哪说起呢?其实这本书也只是在暑假抽空读的,而一读完我就想急切地说点什么,关乎自己,关乎周遭,
也关乎一些自己一直以来对不同性格的人的一些想法。</p>
<p>其实这么久以来,在我脑海里常常涌现的一个错觉就是:</p>

<blockquote>
<p>我是一个神秘的人,沉默寡言、深沉、不喜欢抛头露面。</p>
</blockquote>
<p>这是一个很赞的想法,至少在我看来是的。往往一些曾经不如意又不喜说话的人是善于心理安慰的,尤其是对自己,他们会很好地保护自己不受伤害。他们也往往很喜欢被认可,却又会因为各方的关注而感压力太大。
更多的时候,他们喜欢自己独处,或者只是想安静地待一会儿。这样很安全。</p>
<p>我是一个性格内向的人,从小就是。</p>
<p>而就是因为内向,我从小就被父母数落我的性格,他们甚至周围的其他的人都一致地认为内向是很不好的,
这的确在当时我是切身体会到的。从小跟周围的小伙伴们一起参加外界的活动时我就会感到压力很大,
就像一条离水之鱼,其实到现在也是这样的,只不过能稍微适应些。所以我常常觉得自己是生活在一种对反思和独处持否定态度的文化中,而外向就被人们理所当然地认为是健康发展的自然结果。</p>
<p>一直以来,我没少被多少人说过他们感觉我常常闷闷不乐。</p>
<p>何为乐?其实以前我觉得只要他们不排斥内向个性的人我就很开心了。曾经看到过这样一句话:</p>

<blockquote>
<p>快乐需要拥有三种特质:自尊, 乐观和外向。</p>
</blockquote>
<p>显然,这种说法简直是把性格内向的人掐死在胡同里。我只是觉得不同的人有不同的方式描述他们的快乐,
父母经常就因为我常嘟着嘴、常常不说话闷在心里就觉得我心情很不好,然后就拿琐事来纷扰我所做的事。
可是这样往往适得其反。我想大部分这种错误的想法都是站在不属于性格内向人的角度去考虑一个性格内向的人。而的确是有这样一句显着描述两种性格的话:</p>

<blockquote>
<p>内向和外向处于能量连续体的相反的两端。我们落入那连续体的什么位置就决定了我们获得自己生活精力的方式。处于连续体的偏内向那一端的人倾向于向内以获得精力。而处于连续体的偏外向那一端的人倾向于向外获得精力。</p>
</blockquote>
<p>其实我的理解是把一些情绪包括快乐也置于精力中。至少我觉得我是需要独处来慢慢获得精力的。不过这样导致的不同的生活状态会比较大程度的左右到性格内向的人。也是因为这到现在我甚至其实还有点不满自己内向的性格,因为我总是拿自己跟一些外向的人比,很多时候我觉得自己这样是在犯一个很大的错。而这本书
,很多时候话语间能让或许是你认为的羞耻消散。</p>

<blockquote>
<p>安静的人们常常具有深刻的洞察力,
浅浅的溪流或河水奔流迅速,
较深的水域似乎比较平静。</p>
</blockquote>
<p>到现在以来我接触过许多性格内向的人,对一个问题就像书中所说的一样,一定要知根知底才肯罢休
。这是确实存在的,就在我认为,如果不是彻底地去弄清楚,我就会觉得很心烦,脾气躁乱,我会觉得大脑有一部分是空白的,这种体验让人觉得很没安全感。</p>
<p>其实大多时候像我这样性格内向的人比较拘谨,欣赏一种较简单的生活方式,有亲密的依恋,以新的方式来计划和思考如何去做一件事,倾向于鼓励别人谨慎小心,自我反思,并且在行动前认真思考。相反,正如书中所比喻的一样,外向的人就像有着高新奇的探求者,喜爱奇特而动人的旅行以及任何新鲜的事物,他们容易冲动
,易敏感波动情绪,非常健谈并擅长说服别人,他们倾向于丰富多彩并想将极限推到新的高度。</p>

<blockquote>
<blockquote>
<p>在追求感觉良好这一点上,两者没有什么不同,每个人都喜欢感觉良好,但是他们在是什么让他们感觉良好上大为不同。</p>
</blockquote>
</blockquote>
<p>那会不会在随着时间推移中<strong>改变</strong>一个人的性格呢?</p>
<p>我想多多少少在表面上是会改变的。一个人或多或少会受外界的影响,孟母尚有三迁,但若说完全涉及本性,
可能改变不大。影响的因素很多。许多内向的人会逐渐变得外向,可能是朋友的干涉或者生活的改变,但就我而言,有时候我还是一个内向的人,我隐隐觉得这种改变只是因为生活中出现了某种奇妙的变故,我会觉得自己正在享受另一种风格的生活,别人觉得我是一个外向开朗的人。但是我发现自己还是一如既往的,需要一个人安静地获得精力,还是迫于大型的活动,还是喜欢过着慢节奏的生活。</p>
<p>这本书大部分是作者在阐述她自己的故事,还有许多期间她所研究过的从病理和实际上共同去考虑的分析,
还涉及到婚姻关系、为人父母包括养育性格内向的孩子、社交活动和工作。</p>
<p>懒懒散散写了这么多,其实自己也不知道写了些什么,也就这么边读边写下来了。</p>

<blockquote>
<p>其实我和大多数人一样,有时候很想做个心理学家,只不过在阴差阳错间,在生活所迫,在性格诱使,在碎碎念间从事了另一项工作。</p>
</blockquote>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Tinple.me and liquidluck]]></title>
        <author><name>Tinple</name></author>
        <link href="http://tinple.me/tech/tinple-me-and-liquidluck"/>
        <published>2013-09-06T00:00:00+08:00</published>
        <updated>2013-10-29T21:19:48+08:00</updated>
        <id>http://tinple.me/tech/tinple-me-and-liquidluck</id>
        <content type="html" xml:base="http://tinple.me" xml:lang="en">
            <![CDATA[ <p>These days I have been occupied with <a href="http://tinple.me">tinple.me</a> in my leisure.
And I use liquidluck to build it.Now I want to share the process with you.</p>
<p>Several days ago, I got the response from <a href="http://lepture.com">lepture</a> that suggested
me to use Github Pages.Then I googled some information and started to learn git.</p>
<p>As git is a little difficult to use adeptly, so I am still learning it and I think it is a good 
start for me to dive myself into open source.But for liquidluck, knowing a little knowledge 
about git is ample.</p>
<p>First, you should build a website in liquidluck.You can follow its simple document on 
<a href="http://liquidluck.readthedocs.org/en/latest/index.html">RTD</a>, it is just easy anyway.
And you are also prepared git.</p>
<p>And next you can use git to add your files into VCS(version control system).Turn to your deploy
directory under the website and init the git.</p>

<pre><code>$ cd website/deploy
$ git init</code></pre>
<p>Then add all your files into git and commit it.If you are not similiar with git, I strongly 
advise you to learn the book Pro_Git on the website, chinese and english version are all available. </p>

<pre><code>$ git add .
$ git commit -m 'my blog source'</code></pre>
<p>Now you can see your git status and use remote repository.But at before, you should create a new repo
named [username].github.com, which calls your personal page(one patterns of github pages) and it should be
exist only one. Blog is just a shortname, you can use others.</p>

<pre><code>$ git status
$ git remote add blog https://github.com/username/username.github.com.git
$ git remote -v
$ git push blog master</code></pre>
<p>And type your username and password in github, then you may push your core to github.
If you see some wrongs, you may <code>git pull</code> the repo first or use <code>git push -f</code>.
Going to username.github.io , your website made in liquidluck may display.If you see 404,
you may wait few minutes to let github resolve it and refresh the page.</p>
<p>The main of things is done now.And if you want to buy yourself a domain, you may go to 
<a href="http://godaddy.com/">Godaddy</a>, it is greater than any other domain service company.
For me in China, I used alipay to pay for it.Luckily, I received email from Godaddy 10 minutes around
after I paid(Actually someone used alipay may wait 48 hours later).And then I used DNSPod to set my
domain.You can find some information about it on the website.Pay attention to the top domain in github
when you set your domain resolve.</p>
<p>And today, I followed the webhook document on liquidluck.There are some small mistakes happening
when I added webhook.Because I used virtual machine to run the webhook, some other questions
dizzy me.Anyway to my luck, I fixed it.You can go to <a href="http://liquidluck.readthedocs.org/en/latest/index.html">RTD</a>
again to see something about webhook and just follow it(I am in github).</p>
<p>Finally go to the URL you set and if you see ok, the webhook is already successful.
And you will see deploy directory created.Everytime when you post an essay and refresh the webhook,
the deploy has updated.And then you can <code>git push</code> to your repo.</p>
<p>Although I tossed many times and almost got crazy, it really taught me a lot.
Anyway, liquidluck is just so lovely and I really like it! </p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[重拾Writing]]></title>
        <author><name>Tinple</name></author>
        <link href="http://tinple.me/life/pick-up-writing"/>
        <published>2013-09-01T00:00:00+08:00</published>
        <updated>2013-10-29T14:24:54+08:00</updated>
        <id>http://tinple.me/life/pick-up-writing</id>
        <category scheme="http://tinple.me/tag/life/" term="life" label="life" />
        <category scheme="http://tinple.me/tag/thought/" term="thought" label="thought" />
        <content type="html" xml:base="http://tinple.me" xml:lang="en">
            <![CDATA[ <p>想来已经好久没有写下关乎生活的片段，哪怕是一件事，一个人，一句话。</p>
<p>大一已经恍恍惚惚地溷过去了，显得随意，奔放不羁。期间经历的不多也不少，暑假在家的日子也是时刻去审视这一年来的日子是否能让人念念不忘，是否能让自己觉得不虚度。现在想来随性而过的日子毕竟是凤毛麟角，许多时候性情毕竟和心意相违，而一旦牵连到周遭的事，一年下来也没有几天是能完完全全按着自己既定的轨迹运行。而一旦有了担当的责任与意识，想置身事外便很难了。</p>
<p>我是个很懒的人，大一大部分的日子是在懒散中消散。许多时候知道这种懒散会慢性循环，而自己却依旧无可奈何，想来这便是意志力的缺乏吧。好在生活并不是一如既往的无解，技术带给了我些许解脱与释怀。许多烦恼与担忧被技术冲澹，许多时候的孤寂也好过多了，毕竟大多人是孤寂的。</p>

<blockquote>
<p>性格决定命运。</p>
</blockquote>
<p>以前不相信这句话，现在也是不太相信的。我想再不济两个性格相似的人也能在夜晚促膝而谈，等待星光点点发亮。我相信永久的孤独是不存在的，许多时候某段时间的孤寂是换回下次的相遇。</p>
<p>而在看似一切紊乱的生活在暑假得到了些许改善，暑假期间我开始坚持一些事，开始特意抽出一天的某个时段去认认真真地做某件事，像扇贝打卡，看集美剧，锻炼身体。。而接下来我想开始记录些关于生活的文字在自己的独立博客上，技术为辅。其实不太喜欢wordpress，有时候觉得它很臃肿，平时技术字眼也习惯了记载在云笔记上，况且大部分google下都能在他人那里找到类似的，总之技术博客没想花太多心思，wordpress跟心里所期待的博客也大相径庭。后来我知道了静态博客，然后我找到了Felix Felicis。</p>

<blockquote>
<p>Felix Felicis.</p>
</blockquote>
<p>这是最近发现的一个静态博客框架，看着非常喜欢，简洁的URL，单一清爽的moment主题，的确是个安居文字的好处所。我也爱上了开发者lepture的design pattern与writing style。只是最近忙于另外些事，独立博客的事也是一拖再拖，接下来倒是有点时间去折腾下域名购买和主机的一些事。</p>
<p>很快就开学了。新的学期总是该有些期待与憧憬，过去我总是去试图逃避一些事，现在想想有些倒也无可厚非，但其他的我想自己还是要去尝试。</p>
<p>新学期想做的事列个序列好了。</p>

<ul>
<li>  拥有个独立博客，用中文记录life，用English写Tech</li>
<li>  换个操作系统，开始使用Linux工作</li>
<li>  想开源，想在Github上有自己的Contributions，并坚持下去</li>
<li>  坚持读书，不仅仅是Tech，还有财经，理财。。</li>
<li>  既然决定了走前端，即便技术底子不好，也想多出去跟别人交流，而不是局限于校园</li>
<li>  坚持读大型框架、库的源码</li>
<li>  前端安全</li>
<li>  多读Bible，不能离主太远</li>
<li>  坚持锻炼身体</li>
<li>  跟几个要好的小伙伴们去旅行</li>
<li>  继续坚持扇贝打卡、读新闻、练口语</li>
<li>  Find a girlfriend</li>
</ul>
<p>暂时想做的事只有这些，新学期也预祝一切顺利。</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Css Zen Garden]]></title>
        <author><name>Tinple</name></author>
        <link href="http://tinple.me/tech/csszengarden"/>
        <published>2013-03-05T00:00:00+08:00</published>
        <updated>2013-10-29T21:20:31+08:00</updated>
        <id>http://tinple.me/tech/csszengarden</id>
        <category scheme="http://tinple.me/tag/css/" term="css" label="css" />
        <category scheme="http://tinple.me/tag/design/" term="design" label="design" />
        <content type="html" xml:base="http://tinple.me" xml:lang="en">
            <![CDATA[ <p>Nowadays I am learning 《The Zen of CSS Design》，and the <code>CSS Zen Garden</code> 
is still a world wide development resource site.</p>

<blockquote>
<p>The goal of the site is to showcase what is possible with CSS-based design. Style sheets contributed by graphic designers from around the world are used to change the visual presentation of a single HTML file, producing hundreds of different designs. Aside from reference to an external CSS file, the HTML markup itself never changes. All visual differences are the result of the CSS.</p>
</blockquote>
<p>And below is my note for reading this book.</p>

<h2 id="toc_0">&ldquo;CSS Crib Sheet&rdquo;</h2>
<p>This is an attempt to make the design process <strong>easier</strong>, and provide a quick reference to check when you run into trouble.</p>
<p><a href="http://mezzoblue.com/archives/2013/05/07/10_years/">mezzoblue.com/archives/2013/05/07/10_years/</a>
<a href="http://www.mezzoblue.com/css/cribsheet/">www.mezzoblue.com/css/cribsheet/</a>
<a href="http://www.complexspiral.com/publications/containing-floats/">www.complexspiral.com/publications/containing-floats/</a></p>
]]>
        </content>
    </entry>
</feed>